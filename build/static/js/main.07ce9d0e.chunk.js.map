{"version":3,"sources":["components/MessageForm.js","components/MessageItem.js","components/MessageList.js","services/sound.js","components/Chat.js","components/WelcomePage.js","App.js","index.js","assets/notification_decorative-01.wav"],"names":["useStyles","makeStyles","root","display","height","backgroundColor","input","padding","button","width","props","useState","message","setMessage","showEmojiPicker","setEmojiPicker","classes","onSubmit","e","preventDefault","sendMessage","className","set","onSelect","emoji","native","type","onClick","Input","placeholder","value","onChange","target","fullWidth","color","Button","variant","size","endIcon","Icon","container","avatar","margin","messageItem","span","marginRight","paragraph","wordWrap","maxWidth","borderRadius","fromMe","Avatar","from","slice","toUpperCase","now","moment","time","isSame","format","isBefore","isAfter","subtract","displayTime","overflow","paddingBottom","opacity","messages","nickname","followButtonClassName","map","MessageItem","key","id","sound","Audio","notification","Chat","state","errorMessage","hidden","count","connect","socket","WebSocket","onmessage","setState","JSON","parse","data","length","document","title","play","playSound","NewMessages","sort","a","b","concat","onerror","close","onclose","setTimeout","readyState","reTryInterval","send","stringify","localStorage","getItem","this","addEventListener","visible","MessageList","Alert","severity","AlertTitle","MessageForm","React","Component","withStyles","theme","minWidth","minHeight","flexDirection","name","setName","event","to","setItem","App","path","exact","component","WelcomePage","createMuiTheme","palette","background","primary","secondary","main","typography","h4","fontFamily","fontWeight","h6","body2","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","getElementById","module","exports"],"mappings":"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","file":"static/js/main.07ce9d0e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Input from '@material-ui/core/Input';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Smile } from 'react-feather';\r\nimport { Picker } from 'emoji-mart';\r\nimport 'emoji-mart/css/emoji-mart.css';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        height: '50px',\r\n        backgroundColor: '#fafafa'\r\n    },\r\n    input: {\r\n        padding: '3px 10px'\r\n    },\r\n    button: {\r\n        width: '60px'\r\n    }\r\n});\r\n\r\nexport default (props) => {\r\n    \r\n    const [message, setMessage] = useState('')\r\n    const [showEmojiPicker, setEmojiPicker ] = useState(false)\r\n\r\n    const handleChange = (e) => {\r\n        setMessage(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.sendMessage(message);\r\n        setMessage('')\r\n    }\r\n\r\n    const classes = useStyles();\r\n        return (\r\n            <form onSubmit={handleSubmit} className={classes.root}>\r\n                {showEmojiPicker && <Picker \r\n                set=\"facebook\"\r\n                onSelect={(emoji) => {\r\n                    setMessage(`${message}${emoji.native}`)\r\n                }}\r\n                />}\r\n                <button \r\n                type=\"button\"\r\n                className={classes.button}\r\n                onClick={() => {\r\n                    setEmojiPicker(!showEmojiPicker)\r\n                }}\r\n                >\r\n                    <Smile />\r\n                  </button>\r\n                <Input \r\n                placeholder='Type your message'\r\n                value={message}\r\n                onChange={handleChange}\r\n                type=\"text\"\r\n                fullWidth\r\n                color=\"secondary\"\r\n                className={classes.input}\r\n                />\r\n                <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                size=\"large\"\r\n                endIcon={<Icon>send</Icon>}\r\n                type=\"submit\"\r\n              >Send</Button>\r\n            </form>\r\n        )\r\n}","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport moment from 'moment';\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        display: 'flex',\r\n        \r\n    },\r\n    avatar: {\r\n        margin: '0.5em'\r\n    },\r\n    messageItem: {\r\n        width: '90%'\r\n    },\r\n    span: {\r\n        marginRight: '0.5em'\r\n    },\r\n    paragraph: {\r\n        wordWrap: 'break-word',\r\n        width: 'fit-content',\r\n        maxWidth: '100%',\r\n        backgroundColor: 'lightgray',\r\n        padding: '5px 10px',\r\n        borderRadius: '10px'\r\n    },\r\n    fromMe: {\r\n        backgroundColor: '#372549'\r\n    }\r\n})\r\n\r\nexport default ({ message, fromMe }) => {\r\n\r\n    const displayTime = () => {\r\n        const now = moment()\r\n        if (moment(message.time).isSame(now, 'day')) {\r\n            return moment(message.time).format('[Today at] H:mm')\r\n        } else if (moment(message.time).isBefore(now, 'day') && moment(message.time).isAfter(now.subtract(7, 'day'))) {\r\n            return moment(message.time).format('dddd H:mm')\r\n        } else {\r\n            return moment(message.time).format('Do MMMM YYYY H:mm')\r\n        }\r\n    }\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.container}>\r\n            <Avatar className={`${classes.avatar} ${fromMe ? classes.fromMe : ''}`}>{message.from.slice(0,1).toUpperCase()}</Avatar>\r\n            <div className={classes.messageItem}>\r\n                <span className={classes.span}>{message.from}</span>\r\n                <span className={classes.span}>{displayTime()}</span>\r\n                <p className={classes.paragraph}>{message.message}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MessageItem from './MessageItem';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    overflow: 'auto',\r\n    height: '100%',\r\n    width: '100%',\r\n    paddingBottom: '30px'\r\n  },\r\n  button: {\r\n    backgroundColor: '#372549',\r\n    opacity: '0.8',\r\n    \"&:hover\": {\r\n      backgroundColor: '#372549',\r\n      opacity: '1'\r\n    }\r\n  }\r\n});\r\n\r\nexport default ({ messages, nickname }) => {\r\n    const classes = useStyles()\r\n        return (\r\n            <ScrollToBottom className={classes.root} followButtonClassName={classes.button}>\r\n                {messages.map(message => {\r\n                  if (nickname === message.from) {\r\n                    return <MessageItem message={message} key={message.id} fromMe />\r\n                  } else {\r\n                    return <MessageItem message={message} key={message.id} />\r\n                  }\r\n                }\r\n                  )}\r\n            </ScrollToBottom>\r\n        )\r\n}\r\n","import notification from '../assets/notification_decorative-01.wav'\r\n\r\nexport const sound = new Audio(notification);\r\nexport const playSound = sound => {\r\n    sound.play();\r\n}","import React from 'react';\nimport MessageForm from './MessageForm';\nimport MessageList from './MessageList';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { sound, playSound } from '../services/sound'\n\nconst styles = theme => ({\n  root: {\n    width: '40vw',\n    minWidth: '300px',\n    minHeight: '400px',\n    height: '60vh',\n    borderRadius: '10px',\n    backgroundColor: '#fafafa',\n    display: 'flex',\n    flexDirection: 'column'\n  }\n});\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n    this.socket = null\n    this.reTryInterval = 1000\n  }\n  state = {\n    messages: [],\n    nickname: '',\n    errorMessage: '',\n    hidden: false,\n    count: 0\n  }\n\n  connect = () => {\n    this.socket = new WebSocket('ws://st-chat.shas.tel');\n    this.socket.onmessage = (e) => {\n       if (this.state.hidden) {\n         this.setState(({ count }) => {\n           return {\n             count: count + JSON.parse(e.data).length\n           }\n         });\n        document.title = `(${this.state.count}) You have new messages`;\n        playSound(sound);\n       } \n      this.setState({errorMessage: ''})\n      const NewMessages = JSON.parse(e.data).sort((a, b) => {\n        return a.time - b.time\n      })\n      this.setState(({ messages }) =>\n        {\n        return {\n          messages: messages.concat(NewMessages)\n        }\n      })\n    }\n\n    const check = () => {\n      \n      if (!this.socket || this.socket.readyState === 3) this.connect();\n  };\n    this.socket.onerror = (e) => {\n      this.socket.close()\n    };\n\n    this.socket.onclose = (e) => {\n      this.setState({messages: []})\n      this.setState({errorMessage: 'Lost connection with server. Re-connecting. Restart app if nothing changes'})\n      setTimeout(check(), this.reTryInterval) \n    }\n\n  }\n\n\n  componentDidMount() {\n    const nickname = localStorage.getItem('nickname')\n    this.setState(({ messages }) => {\n      return {\n        messages,\n        nickname\n      }\n    })\n\n    document.addEventListener('visibilitychange', (e) => {\n      this.setState({ hidden: e.target.hidden })\n      if (e.target.visible) {\n        this.setState({ count: 0 })\n      };\n      document.title = 'React App';\n    })\n\n    this.connect();\n  }\n\n  sendMessage = (message) => {\n    this.socket.send(JSON.stringify({\n      from: this.state.nickname,\n      message\n  }))\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <MessageList messages={this.state.messages} nickname={this.state.nickname} />\n        {this.state.errorMessage && \n          <Alert severity=\"error\">\n          <AlertTitle>Error</AlertTitle>\n          {this.state.errorMessage}\n          </Alert>}\n        <MessageForm sendMessage={this.sendMessage} /> \n      </div>\n    );\n  }\n}\n\n\n\nexport default withStyles(styles)(Chat);\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default () => {\r\n    const [name, setName] = useState('');\r\n\r\n    const handleSignIn = () => {\r\n        localStorage.setItem('nickname', name)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Welcome</h1>\r\n            <input \r\n            placeholder=\"please type your nickname\"\r\n            type=\"text\"\r\n            onChange={(event) => setName(event.target.value)}\r\n            />\r\n            <Link to='/chat' onClick={handleSignIn}>\r\n                <button type=\"submit\">Sign-in</button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Chat from './components/Chat';\nimport WelcomePage from './components/WelcomePage'\nimport './App.css';\n\n\nclass App extends React.Component {\n  state = {\n    nickname: ''\n  }\n\n  componentDidMount() {\n    const nickname = localStorage.getItem('nickname')\n    this.setState({\n      nickname\n    })\n  }\n\n  render() {\n    return (\n      <Router>\n        <Route path=\"/\" exact component={this.state.nickname ? Chat : WelcomePage} />\n        <Route path=\"/chat\" component={Chat} />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport App from './App';\n\nconst theme = createMuiTheme({\n  palette: {\n    background: {\n      primary: '#FEECD0'\n    },\n    secondary: {\n      main: '#372549'\n    }\n  },\n  typography: {\n    h4: {\n      fontFamily: \"Playfair Display\",\n      fontWeight: \"bold\"\n    },\n    h6: {\n      fontFamily: \"Poppins\",\n    },\n    body2: {\n      fontFamily: \"Poppins\",\n    },\n  }\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n        <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","module.exports = __webpack_public_path__ + \"static/media/notification_decorative-01.0c23dde9.wav\";"],"sourceRoot":""}